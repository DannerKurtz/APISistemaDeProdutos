// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           String       @id @default(uuid())
  name         String
  password     String
  permissionId String?
  permissions  Permissions? @relation(fields: [permissionId], references: [id])
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  Sales        Sales[]
}

model Permissions {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  level       Int?
  users       Users[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Customers {
  id                String   @id @default(uuid())
  name              String
  postalCode        String
  city              String
  taxId             String
  stateRegistration String
  address           String
  neighborhood      String
  addressNumber     String
  contactName       String
  phone             String
  mobile            String
  email             String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  Sales             Sales[]
}

model RawMaterials {
  id                          String                        @id @default(uuid())
  name                        String
  price                       Float
  unitWeight                  Float
  RawMaterialProductRelations RawMaterialProductRelations[]
  createdAt                   DateTime                      @default(now())
  updatedAt                   DateTime                      @updatedAt
}

model Products {
  id                          String                        @id @default(uuid())
  name                        String
  percentage                  Float?
  price                       Float?
  quantity                    Int
  weight                      Float?
  RawMaterialProductRelations RawMaterialProductRelations[]
  ProductSaleRelations        ProductSaleRelations[]
  createdAt                   DateTime                      @default(now())
  updatedAt                   DateTime                      @updatedAt
}

model RawMaterialProductRelations {
  id                  String       @id @default(uuid())
  productId           String
  product             Products     @relation(fields: [productId], references: [id])
  rawMaterialId       String
  rawMaterial         RawMaterials @relation(fields: [rawMaterialId], references: [id])
  rawMaterialQuantity Float
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
}

model Sales {
  id                   String                 @id @default(uuid())
  saleNumber           String                 @unique
  discount             Float
  totalPrice           Float
  userId               String
  user                 Users                  @relation(fields: [userId], references: [id])
  customerId           String
  customer             Customers              @relation(fields: [customerId], references: [id])
  ProductSaleRelations ProductSaleRelations[]
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
}

model ProductSaleRelations {
  id        String   @id @default(uuid())
  saleId    String
  sale      Sales    @relation(fields: [saleId], references: [id])
  productId String
  product   Products @relation(fields: [productId], references: [id])
  quantity  Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
